server:
  port: 8080
#数据库配置
spring:
#这个是关键，放开springboot对静态资源的拦截
  application:
    name: bullet
  datasource:
      username: root
      password: 112233
      url: jdbc:mysql://101.200.84.235:3306/bullet_screen?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      #连接池建立时创建的初始化连接数
      initialSize: 5
      #连接池中最大的活跃连接数
      maxActive: 20
      #连接池中最小的活跃连接数
      minIdle: 5
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
      validationQuery: select 1
      validationQueryTimeout: 30000
      #是否在获得连接后检测其可用性
      testOnBorrow: false
      #是否在连接放回连接池后检测其可用性
      testOnReturn: false
      #是否在连接空闲一段时间后检测其可用性
      testWhileIdle: true
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall

  redis:
    host: 127.0.0.1
    port: 6379
    lettuce:
      pool:
        max-active: 100
        max-wait: PT10S
        max-idle: 30
        min-idle: 1
        timeout: PT10S
  #热部署工具
  devtools:
    restart:
      poll-interval: 3000ms
      quiet-period: 2999ms
  #thymeleaf
  # 前缀 默认读取classpath:/templates/
  #无需配置
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    charset: UTF-8
    servlet:
      content-type: text/html
      cache: false
#mybatis 配置
mybatis:
  mapper-locations: classpath:mapper/*.xml

#logging配置
logging:
  level:
    org:
      springframework:
        boot:
          autoconfigure: error
#logging:
#  file: ${logging.path}/${spring.application.name}.log
#  path: logs
#  level:
#    com:
#      manager: debug
#swagger 开关
swagger2:
  enable: true
#JWT 密钥
jwt:
  secretKey: 78944878877848fg)
  accessTokenExpireTime: PT2H
  refreshTokenExpireTime: PT8H
  refreshTokenExpireAppTime: P30D
  issuer: http://localhost:8080