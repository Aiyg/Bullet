<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ppm.mapper.WxMemberMapper">
  <resultMap id="BaseResultMap" type="com.ppm.entity.WxMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, nick_name, head_img, area,sex, openid, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wx_member
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findOne" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wx_member
    where openid = #{openid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wx_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ppm.entity.WxMember">
    insert into wx_member (nick_name, head_img,
      area, unionid, openid,sex,
      create_time)
    values (#{nickName,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR},
      #{area,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ppm.entity.WxMember">
    insert into wx_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ppm.entity.WxMember">
    update wx_member
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ppm.entity.WxMember">
    update wx_member
    set nick_name = #{nickName,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=INTEGER},
      openid = #{openid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>